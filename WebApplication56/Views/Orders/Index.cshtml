@model IEnumerable<WebApplication56.Models.Order>

@{
    ViewData["Title"] = "Index";
}

<div>
    @if (Model.Any())
    {
        var lastOrder = Model.Last();
        <div style="text-align: right; margin-bottom: 20px;">
            <label style="float: right; color:#0c1c7a; font-size:30px;"> / رقم الطلب </label> <p style="color:#0c1c7a; font-size:30px;"> @ViewBag.OrdId</p> <br />
            <label style="float: right; color:#0c1c7a; font-size:30px;">/ الايميل </label> <span style="display: inline-block;color:#0c1c7a; font-size:30px;">@lastOrder.Email</span> <br />
        </div>
    }
</div>

<table class="table table-bordered table-striped animated-table">
    <thead style="background-color:#47b5df;">
        <tr>
            <th style="color:white; text-align: center; padding: 10px 20px;">اضافه صف</th>
            <th style="color:white; text-align: center; padding: 10px 20px;">اسم الاداه</th>
            <th style="color:white; text-align: center; padding: 10px 20px;">تاريخ طلب الشراء</th>
        </tr>
    </thead>
    <tbody id="tableBody">
        <tr>
            <td style="text-align: center;">
                <button class="btn btn-add-row" onclick="addRow(this)">
                    <i class="bi bi-plus"></i>
                </button>
            </td>
            <td>
                <div class="input-group">
                    <input type="number" class="tool-quantity form-control" style="width: 50px;" placeholder="الكميه" aria-label="Quantity">
                    <select name="Tool_name" class="form-control" style="width: 200px;" onchange="filterOptions()">
                        <option value="">-- اختر الاداه --</option>
                        @if (ViewBag.ToolNames != null)
                        {
                            foreach (var toolName in ViewBag.ToolNames)
                            {
                                <option value="@toolName">@toolName</option>
                            }
                        }
                    </select>
                </div>
            </td>
            <td>@Html.DisplayFor(modelItem => modelItem.First().OrdDate)</td>
        </tr>
    </tbody>
</table>

<div class="text-center mt-3" style="display: flex; justify-content: center;">
    <button id="insertAllButton" class="btn btn-primary btn-rounded" style="background-color:#47b5df; color:white; font-size:35px;">حفظ  </button>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">

<script>




    document.addEventListener('DOMContentLoaded', function () {
        // Get all input fields with class 'tool-quantity'
        var quantityInputs = document.querySelectorAll('.tool-quantity');

        // Loop through each input field
        quantityInputs.forEach(function (input) {
            input.addEventListener('input', function () {
                var value = this.value.trim(); // Trim any whitespace
                var isValid = /^[1-9]\d*$/.test(value); // Regular expression to check for positive numbers greater than zero

                if (!isValid) {
                    // Clear the input and provide feedback to the user
                    this.value = '';
                    alert('Please enter a positive number greater than zero.');
                }
            });
        });
    });






    function addRow(button) {
        var lastRow = document.querySelector("tbody tr:last-child");
        var newRow = lastRow.cloneNode(true);
        newRow.querySelector("input.tool-quantity").value = ""; // Clear the input field
        var select = newRow.querySelector("select[name='Tool_name']");
        select.selectedIndex = -1; // Reset the selected index of the dropdown
        lastRow.parentNode.appendChild(newRow);
        newRow.style.animation = 'fadeIn 0.5s'; // Add animation to the new row
    }

    $(document).ready(function () {
        // Event handler for the "Insert All" button
        $("#insertAllButton").click(function () {
            var data = [];

            // Loop through each row in the table body
            $("tbody tr").each(function () {
                var row = $(this);
                var toolName = row.find("select[name='Tool_name']").val();
                var quantity = row.find(".tool-quantity").val();

                // Check if all required fields have values
                if (toolName && quantity) {
                    // Add data from the row to the data array
                    data.push({
                        ToolName: toolName,
                        Quantity: parseInt(quantity)
                    });
                }
            });

            // Log data to check its structure
            console.log("Data to send:", data);

            // Check if there is data to send
            if (data.length > 0) {
                // Send an AJAX request to insert the data
                $.ajax({
                    type: "POST",
                    url: "/Orders/Insertion",
                    contentType: "application/json",
                    data: JSON.stringify(data),
                    success: function (response) {
                        console.log('Insertion successful');
                        // Redirect to User/Index on success
                        window.location.href = "/Home/Index";
                    },
                    error: function (xhr, status, error) {
                        console.error('Error occurred:', error);
                        // Display error message to the user
                        alert("Error occurred while inserting data. Please try again later.");
                    }
                });
            } else {
                console.error('No data to send');
                // Display a message to the user indicating no data to send
                alert("No data to send. Please add data to insert.");
            }
        });
    });

</script>

<style>
    .table {
        margin: auto;
        width: 80%;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #f9f9f9;
    }

    .table-striped tbody tr:nth-of-type(even) {
        background-color: #f2f2f2;
    }

    .btn-add-row {
        border: none;
        border-radius: 50%;
        width: 35px;
        height: 35px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: background-color 0.3s ease, box-shadow 0.3s ease;
        font-size: 25px;
        background-color: white;
        color: #0c1c7a;
    }

        .btn-add-row:hover {
            background-color: #0c1c7a;
            color: white;
        }

    .btn-rounded {
        border-radius: 15px;
        width: 200px;
        height: 50px;
        font-size: 16px;
    }

    .text-center {
        text-align: center;
    }

    .input-group {
        display: flex;
        align-items: center;
    }

    .form-control {
        margin-right: 5px;
    }

    #insertAllButton {
        margin-top: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .animated-table tbody tr {
        animation: fadeIn 1s ease-in-out;
    }

    thead th {
        text-align: center;
        padding: 10px 20px;

    }
</style>